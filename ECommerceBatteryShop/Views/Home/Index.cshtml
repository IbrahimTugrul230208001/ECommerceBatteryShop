@using System.Globalization
@{
    ViewData["Title"] = "Home";
}
@model IEnumerable<ECommerceBatteryShop.Models.ProductSectionViewModel>

<section class="mb-12"
         x-data="heroCarousel()"
         x-init="init($el)"
         @@keydown.window.arrow-left.prevent="prev()"
         @@keydown.window.arrow-right.prevent="next()">
    <div class="relative rounded-xl overflow-hidden bg-gray-900 text-white h-80 sm:h-[26rem]">
        <!-- Slides -->
        <template x-for="(slide, i) in slides" :key="i">
            <div class="absolute inset-0 transition-opacity duration-700"
                 :class="current===i ? 'opacity-100 z-10' : 'opacity-0 z-0'"
                 role="group"
                 :aria-roledescription="'slide ' + (i+1) + ' of ' + slides.length">
                <img :src="slide.src" :alt="slide.alt"
                     class="w-full h-full object-cover opacity-60" loading="lazy" />
                <div class="absolute inset-0 flex flex-col items-center justify-center text-center px-4">
                    <h1 class="text-4xl sm:text-5xl font-bold mb-4" x-text="slide.title"></h1>
                    <p class="mb-6 text-lg max-w-2xl" x-text="slide.text"></p>
                    <a :href="slide.ctaHref"
                       class="px-6 py-3 rounded-md bg-amber-300 text-gray-900 font-semibold hover:bg-amber-400"
                       x-text="slide.ctaText"></a>
                </div>
            </div>
        </template>

        <!-- Prev/Next (raise above slide) -->
        <button type="button" @@click="prev()"
                class="absolute left-3 top-1/2 -translate-y-1/2 rounded-full bg-black/40 p-2
                   hover:bg-black/60 focus:outline-none z-30 cursor-pointer">
            <span class="sr-only">Önceki</span>
            <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none">
                <path d="M15 19l-7-7 7-7" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            </svg>
        </button>
        <button type="button" @@click="next()"
                class="absolute right-3 top-1/2 -translate-y-1/2 rounded-full bg-black/40 p-2
                   hover:bg-black/60 focus:outline-none z-30 cursor-pointer">
            <span class="sr-only">Sonraki</span>
            <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none">
                <path d="M9 5l7 7-7 7" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            </svg>
        </button>

        <!-- Dots (raise above slide) -->
        <div class="absolute bottom-3 left-1/2 -translate-x-1/2 flex gap-2 z-30">
            <template x-for="(s, i) in slides" :key="'dot-'+i">
                <button type="button" @@click="go(i)"
                        class="h-2.5 w-2.5 rounded-full transition"
                        :class="current===i ? 'bg-white' : 'bg-white/40 hover:bg-white/70'">
                    <span class="sr-only" x-text="'Slayt ' + (i+1)"></span>
                </button>
            </template>
        </div>
    </div>
</section>


<script nonce="@Csp.ScriptNonce">
 
</script>

<!-- Features -->
<section class="mb-16 grid grid-cols-1 md:grid-cols-3 gap-6">
    <div class="flex items-start gap-4 p-6 bg-white rounded-xl shadow">
        <svg class="w-8 h-8 text-amber-300 flex-shrink-0" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
            <path d="M3 7h13v8H3z" />
            <path d="M16 7h5l1 2v6h-6V7z" />
            <path d="M5 21a2 2 0 100-4 2 2 0 000 4zM17 21a2 2 0 100-4 2 2 0 000 4z" />
        </svg>
        <div>
            <h3 class="text-lg font-semibold text-gray-900">Hızlı Teslimat</h3>
            <p class="text-sm text-gray-600">Siparişlerde güvenli teslimat.</p>
        </div>
    </div>

    <div class="flex items-start gap-4 p-6 bg-white rounded-xl shadow">
        <svg class="w-8 h-8 text-amber-300 flex-shrink-0" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
            <rect x="2" y="7" width="20" height="14" rx="2" ry="2" />
            <path d="M6 7V5a2 2 0 012-2h8a2 2 0 012 2v2" />
        </svg>
        <div>
            <h3 class="text-lg font-semibold text-gray-900">Premium Kalite</h3>
            <p class="text-sm text-gray-600">Birçok çeşit türden kaliteli bataryalar.</p>
        </div>
    </div>

    <div class="flex items-start gap-4 p-6 bg-white rounded-xl shadow">
        <svg class="w-8 h-8 text-amber-300 flex-shrink-0" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 1a9 9 0 00-9 9v5a3 3 0 003 3h1a1 1 0 001-1v-7a1 1 0 00-1-1H6a1 1 0 00-1 1v4m13-4a1 1 0 00-1-1h-1a1 1 0 00-1 1v7a1 1 0 001 1h1a3 3 0 003-3v-5a9 9 0 00-9-9z" />
        </svg>
        <div>
            <h3 class="text-lg font-semibold text-gray-900">İletişim Hattı</h3>
            <p class="text-sm text-gray-600">Whatsapp veya telefon üzerinden ulaşabilirsiniz.</p>
        </div>
    </div>
</section>


@foreach (var s in Model)
{
    if (s?.Products == null || !s.Products.Any()) { continue; }

    <section class="space-y-6 my-12">
        <div class="flex items-center justify-between">
            <h2 class="text-2xl font-bold text-gray-900">@s.Title</h2>

            <a href="@s.AllLink"
               class="group inline-flex items-center gap-1.5 text-sm font-semibold text-gray-800 hover:text-amber-500">
                Tüm Ürünler
                <svg class="h-4 w-4 transition-transform group-hover:translate-x-0.5"
                     viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5 12h14M13 5l7 7-7 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </a>
        </div>

        <div x-data="{
             atStart: true, atEnd: false,
             onScroll(){ const el=$refs.scroller; this.atStart=el.scrollLeft<=5; this.atEnd = el.scrollLeft+el.clientWidth>=el.scrollWidth-5; },
               next(){ const el=$refs.scroller; el.scrollBy({left: el.clientWidth, behavior:'smooth'}); },
               prev(){ const el=$refs.scroller; el.scrollBy({left: -el.clientWidth, behavior:'smooth'}); }
             }"
             x-init="onScroll()"
             class="relative">

            <!-- Controls -->
            <button type="button" @@click="prev" :class="{'opacity-40 pointer-events-none': atStart}"
                                    class="absolute left-2 top-1/2 hover:bg-amber-400 hover:text-white cursor-pointer -translate-y-1/2 z-10 h-10 w-10 grid place-items-center border border-slate-300 rounded-full bg-white shadow-xl"
                    aria-label="Önceki">
                <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" transform="rotate(180)">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M8.29289 4.29289C8.68342 3.90237 9.31658 3.90237 9.70711 4.29289L16.7071 11.2929C17.0976 11.6834 17.0976 12.3166 16.7071 12.7071L9.70711 19.7071C9.31658 20.0976 8.68342 20.0976 8.29289 19.7071C7.90237 19.3166 7.90237 18.6834 8.29289 18.2929L14.5858 12L8.29289 5.70711C7.90237 5.31658 7.90237 4.68342 8.29289 4.29289Z" fill="currentColor"/>
                </svg>
            </button>

            <button type="button" @@click="next" :class="{'opacity-40 pointer-events-none': atEnd}"
                            class="absolute right-2 top-1/2 -translate-y-1/2 z-10 h-10 w-10 hover:text-white grid place-items-center text-xl rounded-full bg-white shadow-xl border border-slate-300 hover:bg-amber-400 cursor-pointer"
                    aria-label="Sonraki">
                <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M8.29289 4.29289C8.68342 3.90237 9.31658 3.90237 9.70711 4.29289L16.7071 11.2929C17.0976 11.6834 17.0976 12.3166 16.7071 12.7071L9.70711 19.7071C9.31658 20.0976 8.68342 20.0976 8.29289 19.7071C7.90237 19.3166 7.90237 18.6834 8.29289 18.2929L14.5858 12L8.29289 5.70711C7.90237 5.31658 7.90237 4.68342 8.29289 4.29289Z" fill="currentColor"/>
                </svg>
            </button>

            <!-- Track -->
            <div x-ref="scroller" style="--g:12px" @@scroll.passive="onScroll"
                 class="flex gap-[var(--g)] overflow-x-auto snap-x snap-mandatory scroll-smooth hide-scrollbar px-1 py-2">

                @foreach (var product in s.Products)
                {
                        <div class="flex-none min-w-0 pl-2 lg:basis-[calc((100%-3*var(--g))/4)] md:basis-[calc((100%-2*var(--g))/3)] basis-[calc((100%-1*var(--g))/2)] snap-start">
                            <article class="group h-72 flex flex-col rounded-xl border border-slate-200 bg-white shadow-sm transition hover:shadow-md">
                                <!-- Image -->
                                <a href="/Product/Details/@product.Id" class="block p-3 pb-0">
                                          <div class="h-32 grid place-items-center overflow-hidden">
            <img src="/img/@(string.IsNullOrWhiteSpace(product.ImageUrl) ? "temsili.png" : product.ImageUrl)"
                 alt="@(string.IsNullOrWhiteSpace(product.Name) ? "Görsel yok" : product.Name)"
                 class="h-28 w-auto object-contain transition-transform duration-200 group-hover:scale-[1.03]" />
        </div>

                                </a>

                                <!-- Content -->
                                <div class="px-3 pt-2 flex-1 flex flex-col">
                                    <h3 class="text-sm font-semibold text-gray-900 line-clamp-2 min-h-[2.75rem]">@product.Name</h3>

                                    <!-- Rating + Price -->
                                    <div class="mt-1 flex items-center justify-between">
                                        @*
                                        <div class="flex items-center gap-0.5 text-yellow-400">
                                            @{
                                                    // Safer star count from float rating [0..5]
                                                    var r = product.Rating;
                                                    var full = r < 0 ? 0 : r > 5 ? 5 : (int)Math.Floor(r);
                                                    for (var i = 0; i < 5; i++)
                                                    {
                                                            var filled = i < full;
                                                        <text>
                                                            <svg class="h-4 w-4 @(filled ? "" : "text-gray-300")" viewBox="0 0 24 24" fill="currentColor">
                                                                <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z" />
                                                            </svg>
                                                        </text>
                                                    ;
                                                    }
                                            }
                                            
                                        </div>
                                        *@
                                        <div class="text-right">
                                            <div class="text-lg font-bold text-gray-900">
                                                @product.Price.ToString("C", new CultureInfo("tr-TR"))
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Actions -->
                                    <div class="mt-3 mb-3 flex items-center gap-2">
                                        <button
                                            hx-post="/Cart/Add"
                                            hx-vals='{"productId": @product.Id, "quantity": 1}'
                                            hx-swap="none"
                                            x-data="{ added: false }"
                                            @@click="if (added) return; added = true; setTimeout(() => added = false, 1600);"
                                            :class="added ? 'bg-green-500 text-white' : 'bg-amber-300 text-gray-900 hover:bg-amber-400'"
                                            class="flex-1 h-9 rounded-md text-sm font-semibold shadow transition-colors duration-300 relative overflow-hidden focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-yellow-400 cursor-pointer">
                                            <span x-show="!added"
                                                  x-transition:enter="transition transform ease-out duration-250"
                                                  x-transition:enter-start="-translate-y-3 opacity-0"
                                                  x-transition:enter-end="translate-y-0 opacity-100"
                                                  x-transition:leave="transition transform ease-in duration-200"
                                                  x-transition:leave-start="translate-y-0 opacity-100"
                                                  x-transition:leave-end="translate-y-3 opacity-0"
                                                  class="block">
                                                Sepete ekle
                                            </span>

                                            <span x-show="added"
                                                  x-transition:enter="transition transform ease-out duration-250"
                                                  x-transition:enter-start="translate-y-3 opacity-0"
                                                  x-transition:enter-end="translate-y-0 opacity-100"
                                                  x-transition:leave="transition transform ease-in duration-200"
                                                  x-transition:leave-start="translate-y-0 opacity-100"
                                                  x-transition:leave-end="-translate-y-3 opacity-0"
                                                  class="absolute inset-0 flex items-center justify-center gap-1">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 align-middle" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                                    <path d="M20 6L9 17l-5-5"/>
                                                </svg>
                                                <span class="align-middle text-white">Sepete eklendi</span>
                                            </span>
                                        </button>

                                   <!-- Favorite (Heart) -->
        <button
          type="button"
          x-data="{ fav: @(product.IsFavorite ? "true" : "false"), busy: false }"
          @@click="
            if (busy) return;
            busy = true;
            fav = !fav;
            setTimeout(() => busy = false, 300);
          "
          hx-post="/Favorites/Toggle"
          :hx-vals="JSON.stringify({ productId: @product.Id})"
           hx-swap="none"
          :aria-pressed="fav.toString()"
          :class="fav ? 'text-rose-600 border-rose-300 bg-rose-50' : 'text-gray-700 border-gray-300 hover:bg-gray-100'"
          class="relative h-9 w-9 grid place-items-center rounded-md border cursor-pointer
                 transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-rose-400">
          <span class="sr-only" x-text="fav ? 'Favorilerden çıkar' : 'Favorilere ekle'"></span>

          <!-- Stack both icons; animate opacity/scale only (no x-show) -->
          <div class="relative h-5 w-5">
            <!-- Outline -->
            <svg xmlns="http://www.w3.org/2000/svg"
                 class="absolute inset-0 h-5 w-5 transition-all duration-200 ease-out"
                 :class="fav ? 'opacity-0 scale-90' : 'opacity-100 scale-100'"
                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                 stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z"/>
            </svg>

            <!-- Filled -->
            <svg xmlns="http://www.w3.org/2000/svg"
                 class="absolute inset-0 h-5 w-5 transition-all duration-220 ease-out"
                 :class="fav ? 'opacity-100 scale-100' : 'opacity-0 scale-110'"
                 viewBox="0 0 24 24" fill="currentColor">
              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z"/>
            </svg>
          </div>
        </button>







                                    </div>
                                </div>
   </article>
                        </div>
                }
            </div>
        </div>
    </section>
}

<script nonce="@Csp.ScriptNonce" src="~/js/anasayfa.js"></script>
<style nonce="@Csp.StyleNonce">
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}
</style>

