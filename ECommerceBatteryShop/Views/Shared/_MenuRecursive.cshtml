@model CategoryMenuModel

<style>
    /* Core show/hide: only the hovered <li> opens its direct submenu */
    .menu-li {
        position: relative
    }

        .menu-li > .submenu {
            position: absolute;
            opacity: 0;
            visibility: hidden;
            pointer-events: none;
            transition: opacity .15s,transform .15s
        }

        .menu-li:hover > .submenu, .menu-li:focus-within > .submenu {
            opacity: 1;
            visibility: visible;
            pointer-events: auto
        }

        /* Directions */
        .menu-li.depth-0 > .submenu {
            top: 100%;
            left: 0;
            transform: translateY(4px)
        }

        .menu-li.depth-1 > .submenu, .menu-li.depth-2 > .submenu, .menu-li.depth-3 > .submenu {
            top: 0;
            left: 100%;
            transform: translateX(4px)
        }

        /* Hover bridge to remove gaps */
        .menu-li.depth-0 > .submenu::before {
            content: "";
            position: absolute;
            left: 0;
            top: -8px;
            width: 100%;
            height: 8px
        }

        .menu-li.depth-1 > .submenu::before, .menu-li.depth-2 > .submenu::before, .menu-li.depth-3 > .submenu::before {
            content: "";
            position: absolute;
            top: 0;
            left: -8px;
            width: 8px;
            height: 100%
        }
</style>

@functions {
    string LinkTop =>
        "relative z-30 font-semibold flex items-center gap-1 cursor-pointer " +
        "after:content-[''] after:absolute after:left-0 after:-bottom-1 after:h-[2px] after:w-full after:bg-white " +
        "after:origin-left after:scale-x-0 after:transition-transform after:duration-300 " +
        "hover:after:scale-x-100";

    string SubmenuBase =>
        "submenu min-w-56 bg-white shadow-lg rounded-xl text-sm text-gray-900 z-50 " +
        "ring-1 ring-black/5";
}

@foreach (var node in Model.Items)
{
    var depth = Model.Depth;                        // 0..3
    var hasKids = node.SubCategories?.Any() == true && depth < 3;

    <li class="menu-li depth-@depth rounded-lg hover:rounded-lg">
        @if (hasKids)
        {
            <a href="@Url.Action("Index", "Urun", new { categorySlug = node.Slug })"
               class="@(depth == 0
                                          ? "relative z-30 font-semibold flex items-center gap-1 cursor-pointer after:content-[''] after:absolute after:left-0 after:origin-left after:scale-x-0 after:transition-transform after:duration-300 hover:after:scale-x-100"
                                                         : "flex items-center justify-between px-3 py-2 block font-semibold rounded-lg")"
       aria-haspopup="true" aria-expanded="false">
        @node.Name
        @if (depth == 0)
                {
                    <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7" />
                    </svg>
                }
                else
                {
                    <svg class="h-4 w-4 text-gray-400 ml-3" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11 10l-3.77-3.71a.75.75 0 111.06-1.06l4.24 4.24a.75.75 0 010 1.06l-4.24 4.24a.75.75 0 01-1.06 0z" clip-rule="evenodd" />
                    </svg>
                }
            </a>

            <ul class="@SubmenuBase">
                @await Html.PartialAsync("_MenuRecursive", new CategoryMenuModel {
                Items = node.SubCategories!,
                Depth = depth + 1
                })
    </ul>
        }

        else
    {
        <a href="@Url.Action("Index", "Urun", new { categorySlug = node.Slug })"
           class="@(depth == 0
                                          ? "relative font-semibold after:absolute after:left-0 after:-bottom-1 after:h-[2px] after:w-full after:origin-left after:scale-x-0 after:bg-white after:transition-transform after:duration-300 hover:after:scale-x-100"
                                          : "block px-4 py-2 text-sm text-gray-700 font-semibold rounded-lg hover:bg-gray-50 hover:text-gray-900")">
        @node.Name
    </a>
        }
</li>
}
