@using System.Globalization
@model ECommerceBatteryShop.Models.FavoriteViewModel

@{
    ViewData["Title"] = "Favoriler";
    var culture = new CultureInfo("tr-TR");
    var cookieMessage = Model?.CookieMessage ?? "Çerezleri kabul etmediğiniz için favorileriniz kaydedilemiyor.";
}

@if (Model?.CookiesDisabled == true)
{
    <section class="space-y-6">
        <div class="rounded-2xl border border-dashed border-amber-200 bg-amber-50 px-6 py-12 text-center text-amber-700">
            <div class="mx-auto mb-4 grid h-14 w-14 place-items-center rounded-full bg-amber-200/70 text-amber-700">
                <svg class="h-7 w-7" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M3 12a9 9 0 1 1 9 9" />
                    <path d="M12 7v5l3 3" />
                </svg>
            </div>
            <h1 class="text-2xl font-semibold text-amber-900">Favoriler için çerez izni gerekiyor</h1>
            <p class="mt-2 text-sm">@cookieMessage</p>
            <p class="mt-1 text-xs text-amber-800/80">Çerezleri kabul ettiğinizde beğendiğiniz ürünleri sizin için saklayabiliriz.</p>
            <div class="mt-6 flex flex-col gap-3 sm:flex-row sm:justify-center">
                <button type="button"
                        class="inline-flex h-11 items-center justify-center rounded-xl bg-amber-300 px-6 font-semibold text-gray-900 shadow-sm transition hover:bg-amber-400 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-amber-300/60"
                        onclick="window.dispatchEvent(new CustomEvent('open-cookie-banner'))">
                    Çerez tercihlerimi güncelle
                </button>
                <a href="/Urun/Index"
                   class="inline-flex h-11 items-center justify-center rounded-xl border border-amber-200 px-6 text-sm font-semibold text-amber-900 transition hover:border-amber-300">
                    Ürünlere göz at
                </a>
            </div>
        </div>
    </section>
}
else
{
<section class="space-y-6">
    <header class="flex items-end justify-between gap-4 border-b border-gray-200 pb-4">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Favorilerim</h1>
            <p class="text-sm text-gray-500">Beğendiğiniz ürünleri burada tutun. Uygun olunca sepete ekleyin.</p>
        </div>
    </header>

    @if (Model == null || !Model.Items.Any())
    {
        <!-- Empty state -->
        <div class="grid place-items-center rounded-2xl border border-dashed border-gray-300 bg-white p-10 pb-15 text-center">
            <svg class="h-16 w-16 text-gray-400" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M11.993 5.097c-.954-.838-2.209-1.347-3.585-1.347C5.421 3.75 3 6.15 3 9.11c0 1.363.506 2.614 1.352 3.56L12 20.25l7.422-7.356.22-.231C20.487 11.717 21 10.473 21 9.11c0-2.96-2.421-5.36-5.408-5.36-1.376 0-2.631.509-3.585 1.347l-.007-.007-.007.007z" />
            </svg>
            <h2 class="mt-3 text-lg font-semibold text-gray-900">Henüz favoriniz yok</h2>
            <p class="mt-1 text-sm text-gray-500">Ürünleri kalp ikonuyla favorilerinize ekleyin.</p>
            <a href="/Urun/Index"
               class="mt-5 inline-flex h-10 items-center rounded-md bg-amber-300 px-4 font-semibold text-gray-900 ring-1 ring-black/10 hover:bg-amber-400 transition">
                Alışverişe Başla
            </a>
        </div>
    }
    else
    {
        <!-- List -->
        <ul id="fav-list" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            @foreach (var p in Model.Items)
            {
                var id = p.ProductId;
                var unitPrice = p.UnitPrice;
                var name = p.Name ?? "Ürün";
                var image = string.IsNullOrWhiteSpace(p.ImageUrl)
                ? "/img/placeholder.png"
                : (p.ImageUrl!.StartsWith("/img/") ? p.ImageUrl : "/img/" + p.ImageUrl);
                var inStock = p.StockQuantity > 0;
                var stockText = inStock ? "Stokta var" : "Stokta yok";

                <li id="fav-@id"
                    x-data="{ removing:false }"
                    x-show="!removing"
                    x-transition.opacity.scale.duration.200ms
                    class="will-change-transform will-change-opacity">
                    <article class="group relative overflow-hidden rounded-2xl border border-gray-200 bg-white">
                        <a href="/@p.Slug" class="block aspect-[4/3] bg-white">
                            <img src="@image" alt="@name" class="h-full w-full object-contain" loading="lazy" decoding="async" />
                        </a>

                        <div class="p-4 space-y-3">
                            <div class="min-h-[2.5rem]">
                                <a href="/@p.Slug"
                                   class="line-clamp-2 font-medium text-gray-900 hover:underline">@name</a>
                            </div>

                            <div class="flex items-center justify-between">
                                <div class="text-lg font-semibold text-gray-900">
                                    @unitPrice.ToString("C", culture)
                                </div>
                            </div>

                            <div class="flex items-center gap-3">
                                <!-- Add to cart -->
                                <form class="contents" id="cart-form-@id">
                                    @Html.AntiForgeryToken()
                                    <div class="flex flex-1 flex-col gap-1">
                                        @if (inStock)
                                        {
                                                <button hx-post="/Sepet/Add"
                                                        hx-include="#cart-form-@id"
                                                        hx-vals='{"productId": @id, "quantity": 1}'
                                                        hx-swap="none"
                                                        hx-on::before-request="this._alpine.loading = true"
                                                        hx-on::after-request="this._alpine.loading = false; this._alpine.added = true; setTimeout(() => this._alpine.added = false, 1600)"
                                                        x-data="{ loading: false, added: false }"
                                                        x-init="$el._alpine = $data"
                                                        :class="added ? 'bg-green-500 text-white' : (loading ? 'bg-amber-400' : 'bg-amber-300 text-gray-900 hover:bg-amber-400')"
                                                        :disabled="loading || added"
                                                        class="h-9 w-full rounded-md text-sm font-semibold shadow transition-colors duration-300 relative overflow-hidden focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-yellow-400 cursor-pointer disabled:cursor-not-allowed">

                                                    <!-- Normal state -->
                                                    <span x-cloak x-show="!loading && !added">Sepete ekle</span>

                                                    <!-- Loading state -->
                                                    <span x-cloak x-show="loading" class="absolute inset-0 flex items-center justify-center gap-2">
                                                        <svg class="animate-spin h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
                                                        </svg>
                                                        <span>Ekleniyor...</span>
                                                    </span>

                                                    <!-- Success state -->
                                                    <span x-cloak x-show="added" class="absolute inset-0 flex items-center justify-center gap-1">
                                                        <svg class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M20 6L9 17l-5-5" /></svg>
                                                        <span>Sepete eklendi</span>
                                                    </span>
                                                </button>
                                        }
                                        else
                                        {
                                            <button type="button"
                                                    disabled
                                                    class="h-9 w-full rounded-md bg-gray-300 text-sm font-semibold text-gray-500 shadow cursor-not-allowed">
                                                Stokta yok
                                            </button>
                                        }
                                    </div>
                                </form>

                                <!-- Remove from favorites -->
                                <form class="contents" id="fav-form-@id">
                                    @Html.AntiForgeryToken()
                                    <button type="button"
                                            hx-post="/Favori/Toggle"
                                            :hx-vals="JSON.stringify({ productId: @id})"
                                            hx-target="#fav-@id"
                                            hx-swap="outerHTML"
                                            @@htmx:before-request="removing = true"
                                            class="text-slate-600 hover:text-slate-900 cursor-pointer border border-slate-300 hover:border-slate-600 p-1 rounded-md transition duration-200"
                                            aria-label="Kaldır" title="Kaldır">
                                        <svg class="h-7 w-7" viewBox="0 0 24 24" fill="none">
                                            <path d="M18 6V16.2C18 17.88 18 18.72 17.673 19.362C17.385 19.927 16.927 20.385 16.362 20.673C15.72 21 14.88 21 13.2 21H10.8C9.12 21 8.28 21 7.638 20.673C7.074 20.385 6.615 19.927 6.327 19.362C6 18.72 6 17.88 6 16.2V6M4 6H20M16 6L15.729 5.188C15.467 4.401 15.336 4.008 15.093 3.717C14.878 3.46 14.602 3.261 14.291 3.139C13.938 3 13.523 3 12.694 3H11.306C10.477 3 10.062 3 9.709 3.139C9.398 3.261 9.122 3.46 8.907 3.717C8.664 4.008 8.533 4.401 8.271 5.188L8 6"
                                                  stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </article>
                </li>

            }
        </ul>

        <!-- Live region for a11y updates -->
        <div aria-live="polite" class="sr-only" id="fav-live"></div>
    }
</section>

@section Scripts {
    <!-- If you already emit the token meta in _Layout, keep only the JS below -->
    @inject Microsoft.AspNetCore.Antiforgery.IAntiforgery AF

    <script>
        // Send antiforgery token with all HTMX requests
        document.body.addEventListener('htmx:configRequest', function (evt) {
            var meta = document.querySelector('meta[name="request-verification-token"]');
            if (meta) evt.detail.headers['RequestVerificationToken'] = meta.getAttribute('content');
        });

        // After an item is removed, if list is empty, reload to show empty state/header actions
        document.body.addEventListener('htmx:afterSwap', function (evt) {
            if (evt.target && evt.target.id && evt.target.id.startsWith('fav-')) {
                var any = document.querySelectorAll('#fav-list li').length;
                if (!any) window.location.reload();
            }
        });
                startRemove(i){
          if(i.removing) return;
          i.removing = true;             // toggles x-show → plays leave animation
          setTimeout(() => this.remove(i.id), 240); // > duration, lets CSS finish
        }

                           remove(id){
          const idx = this.items.findIndex(i => i.id === id);
          if (idx > -1){
            const removed = { ...this.items[idx] };
            // removing flag already set in startRemove()
            this.items.splice(idx, 1);      // actually purge after timeout
            this.lastRemoved = removed;
            this.persist();
            this.notify('Ürün kaldırıldı','warn');
          }
        }
    </script>
}
}
