@using System.Linq
@{
    ViewBag.Title = "Checkout";
}
@model ECommerceBatteryShop.Models.CheckoutPageViewModel
@{
    decimal subTotal = Model.SubTotal;
    decimal tax = subTotal * 0.2m;
    decimal shipping = Model.ShippingCost;
    var defaultAddressId = Model.Addresses.FirstOrDefault(a => a.IsDefault)?.Id
        ?? Model.Addresses.FirstOrDefault()?.Id;
    var contractUrl = defaultAddressId.HasValue
        ? Url.Action("DistantSelling", "Cart", new { addressId = defaultAddressId.Value, shipping })
        : Url.Action("DistantSelling", "Cart", new { shipping });
    contractUrl ??= "/Cart/DistantSelling";
}
<main x-data class="bg-white min-h-screen pt-10 pb-24">
    <div class="mx-auto max-w-5xl px-4">
        <!-- Başlık -->
        <header class="mb-8">
            <h1 class="text-2xl font-bold text-slate-900">Ödeme</h1>
            <p class="text-sm text-slate-600 mt-1">Teslimat • Ödeme • Onay</p>
        </header>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Sol sütun -->
            <div class="lg:col-span-2 space-y-8">
                <!-- Adresler -->
                <section class="rounded-2xl bg-white p-6 shadow-sm ring-1 ring-black/5">
                    <div class="flex flex-wrap items-center justify-between gap-4">
                        <div>
                            <h2 class="text-lg font-semibold text-gray-900">Adresler & Fatura Bilgileri</h2>
                            <p class="text-sm text-gray-500">Teslimat adreslerinizi ve fatura bilgilerinizi yönetin.</p>
                        </div>

                        <button type="button"
                                @@click="$store.address.openNew()"
                                class="inline-flex items-center gap-2 rounded-full border border-amber-400 px-4 py-2 text-sm font-semibold text-amber-600 hover:border-amber-700 hover:text-amber-700">
                            Yeni adres ekle
                            <svg class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24">
                                <path d="M12 5v14" />
                                <path d="M5 12h14" />
                            </svg>
                        </button>
                    </div>

                    @await Html.PartialAsync("_AddressListPartial", Model.Addresses)
                </section>

                <!-- Ödeme Yöntemi -->
                <section x-data="payUi()" class="rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
                    <div class="flex items-center justify-between mb-4">
                        <h2 class="text-lg font-semibold text-slate-900">Ödeme Yöntemi</h2>
                        <span class="text-xs text-slate-500">Güvenli ödeme</span>
                        <img src="/img/paywithiyzico.png"
                             alt="Pay with iyzico"
                             class="h-12 w-auto"
                             loading="lazy" />
                    </div>

                    <fieldset class="space-y-3">
                        <label class="flex items-center gap-3">
                            <input type="radio" name="pm" value="card" x-model="method" class="text-amber-500">
                            <span class="font-medium text-slate-800">Banka/Kredi Kartı</span>
                        </label>
                        <label class="flex items-center gap-3">
                            <input type="radio" name="pm" value="iban" x-model="method" class="text-amber-500">
                            <span class="font-medium text-slate-800">Havale/EFT (IBAN)</span>
                        </label>
                    </fieldset>

                    <!-- Kart -->
                    <div x-show="method==='card'" x-transition class="mt-5 space-y-4">
                        <template x-if="saved.length">
                            <div class="space-y-2">
                                <p class="text-sm text-slate-700">Kayıtlı Kartlar</p>
                                <template x-for="c in saved" :key="c.id">
                                    <label class="flex items-center justify-between rounded-lg border p-3 hover:bg-slate-50">
                                        <span class="flex items-center gap-3">
                                            <input type="radio" name="cardSel" :value="c.id" x-model="selectedId">
                                            <span class="text-sm text-slate-800" x-text="`${c.brand} •••• ${c.last4}`"></span>
                                        </span>
                                        <span class="text-xs text-slate-500" x-text="c.holder"></span>
                                    </label>
                                </template>
                            </div>
                        </template>

                        <details :open="!saved.length" class="rounded-lg border border-slate-400 p-3 bg-gray-50">
                            <summary class="cursor-pointer text-sm font-medium text-slate-600">Yeni kart ekle</summary>
                            <div class="mt-3 grid gap-3">
                                <input x-model="newCard.name" placeholder="Kart üzerindeki isim" class="rounded-lg border border-slate-400 px-3 py-2">
                                <input x-model="newCard.number" @@input="maskCard" maxlength="19" inputmode="numeric" placeholder="XXXX XXXX XXXX XXXX" class="rounded-lg border border-slate-400 px-3 py-2">
                                <div class="grid grid-cols-3 gap-3">
                                    <input x-model="newCard.exp" @@input="maskExp" maxlength="5" inputmode="numeric" placeholder="AA/YY" class="rounded-lg border border-slate-400 px-3 py-2">
                                    <input x-model="newCard.cvc" maxlength="4" inputmode="numeric" placeholder="CVC" class="rounded-lg border border-slate-400 px-3 py-2">
                                    <label class="flex items-center gap-2 text-sm">
                                        <input type="checkbox" x-model="newCard.save" class="rounded border-slate-300"> Kaydet
                                    </label>
                                </div>
                            </div>
                        </details>
                    </div>

                    <!-- IBAN -->
                    <div x-show="method==='iban'" x-transition class="mt-5 space-y-3">
                        <p class="text-sm text-slate-700">Aşağıdaki IBAN’a transfer yapın. Açıklamaya sipariş numaranızı yazın.</p>
                        <div class="flex items-center gap-2">
                            <code id="ibanText" class="flex-1 bg-white border border-slate-300 rounded-lg p-3 font-mono text-sm">TR64 0006 7010 0000 0011 7253 73</code>
                            <button type="button" id="copyIban" class="rounded-lg border border-slate-300 px-3 py-2 text-sm hover:bg-slate-50">Kopyala</button>
                        </div>
                    </div>

                    <div class="mt-6 flex items-center gap-2">
                        <input id="sozlesme" type="checkbox" class="rounded border-slate-300">
                        <label for="sozlesme" class="text-xs text-slate-600">
                            Ön bilgilendirme formu ve
                            <a href="@contractUrl"
                               target="_blank"
                               rel="noopener"
                               class="text-amber-600 hover:text-amber-700 underline font-medium">
                                Mesafeli satış sözleşmesini okudum, onaylıyorum
                            </a>.
                        </label>
                    </div>

                    <button type="button" @@click="placeOrder" class="mt-4 w-full h-12 rounded-xl bg-amber-300 font-semibold text-gray-900 hover:bg-amber-400 disabled:opacity-60">
                        Siparişi onayla
                    </button>
                </section>
            </div>

            <!-- Sağ sütun -->
            <aside class="lg:col-span-1">
                <div class="lg:sticky lg:top-24 rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
                    <h3 class="text-base font-semibold text-slate-900 mb-4">Sipariş Özeti</h3>
                    <dl class="space-y-2 text-sm">
                        <div class="flex justify-between"><dt class="text-slate-600">Ara Toplam</dt><dd class="text-slate-900 font-medium">₺@subTotal</dd></div>
                        <div class="flex justify-between"><dt class="text-slate-600">Kargo</dt><dd class="text-slate-900 font-medium">₺@shipping</dd></div>
                        <div class="flex justify-between"><dt class="text-slate-600">KDV (dahil)</dt><dd class="text-slate-900 font-medium">₺@tax</dd></div>
                        <div class="h-px bg-slate-200 my-2"></div>
                        <div class="flex justify-between text-base">
                            <dt class="text-slate-900 font-semibold">Genel Toplam</dt><dd class="text-slate-900 font-semibold">₺@(subTotal + shipping)</dd>
                        </div>
                    </dl>
                    <p class="text-xs text-slate-500 mt-4">Adres ve ödeme bilgilerinizi doğrulamadan sipariş oluşturulmaz.</p>
                </div>
            </aside>
        </div>
    </div>
</main>

    @await Html.PartialAsync("_AddressModalPartial")
<script>


    // IBAN copy
    (function () {
      const btn = document.getElementById('copyIban');
      const node = document.getElementById('ibanText');
      if (!btn || !node) return;
      btn.addEventListener('click', async () => {
        const text = node.innerText.replace(/\s+/g, ' ').trim();
        try {
          await navigator.clipboard.writeText(text);
          btn.textContent = 'Kopyalandı';
          setTimeout(() => btn.textContent = 'Kopyala', 1500);
        } catch {}
      });
    })();

    // Payment UI
    function payUi(){
      return {
        method:'card',
        saved:[],
        selectedId:null,
        newCard:{name:'', number:'', exp:'', cvc:'', save:true},
        digits(s){ return (s||'').replace(/\D/g,''); },
        maskCard(){ let d=this.digits(this.newCard.number).slice(0,16); this.newCard.number=d.replace(/(\d{4})(?=\d)/g,'$1 ').trim(); },
        maskExp(){ let d=this.digits(this.newCard.exp).slice(0,4); this.newCard.exp=(d.length>=3)? d.slice(0,2)+'/'+d.slice(2) : d; },
        luhn(num){ let d=this.digits(num), s=0, alt=false; for(let i=d.length-1;i>=0;i--){ let n=+d[i]; if(alt){ n*=2; if(n>9)n-=9; } s+=n; alt=!alt; } return d.length>=13 && s%10===0; },
        placeOrder(){
          if(!document.getElementById('sozlesme').checked){ alert('Sözleşmeyi onaylayın.'); return; }
          if(this.method==='card'){
            if(this.selectedId){ htmx.ajax('POST','/Checkout/PlaceOrder',{values:{paymentMethod:'card_saved', cardId:this.selectedId}}); return; }
            if(!this.luhn(this.newCard.number)){ alert('Kart numarası geçersiz.'); return; }
            htmx.ajax('POST','/Checkout/PlaceOrder',{
              values:{
                paymentMethod:'card_new',
                name:this.newCard.name,
                number:this.digits(this.newCard.number),
                exp:this.newCard.exp,
                cvc:this.newCard.cvc,
                save:this.newCard.save
              }
            });
          } else if(this.method==='iban'){
            htmx.ajax('POST','/Checkout/PlaceOrder',{values:{paymentMethod:'iban'}});
          }
        }
      }
    }
</script>

<!-- Ensure Alpine.js + htmx are loaded globally -->
<!-- <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script> -->
<!-- <script src="https://unpkg.com/htmx.org@1.9.10"></script> -->
