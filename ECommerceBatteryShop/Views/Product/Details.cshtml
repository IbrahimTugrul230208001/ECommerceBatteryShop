@model ECommerceBatteryShop.Models.ProductViewModel
@{
    ViewBag.Title = Model.Name;
}

<main class="bg-white min-h-screen pt-28 pb-24">
    <div class="mx-auto max-w-7xl px-4">

        <!-- Grid: image left, info right -->
        <div x-data="productPage()" class="grid grid-cols-1 lg:grid-cols-2 gap-10">

            <!-- Left: Image / gallery -->
            <section class="rounded-2xl border border-slate-200 bg-white p-4 sm:p-6 shadow-sm">
                <div class="relative rounded-xl bg-white transition-transform duration-200 overflow-hidden h-[420px] flex items-center justify-center hover:scale-[1.07]">
                    <img src="/img/@Model.ImageUrl"
                         alt="@Model.Name"
                         class="max-h-full max-w-full object-contain" />
                </div>

            </section>

            <!-- Right: Details -->
            <section class="rounded-2xl border border-slate-200 bg-white p-4 sm:p-6 shadow-sm">
                <h1 class="text-2xl font-semibold text-slate-900">@Model.Name</h1>

                <!-- Rating -->
                <div class="mt-2 flex items-center gap-2">
                    <div class="flex items-center gap-0.5 text-amber-500">
                        @for (var i = 0; i < 5; i++)
                        {
                            if (i < Model.Rating)
                            {
                                <svg class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor"><path d="M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z" /></svg>
                            }
                            else
                            {
                                <svg class="h-4 w-4 text-slate-300" viewBox="0 0 24 24" fill="currentColor"><path d="M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z" /></svg>
                            }
                        }
                    </div>
                    <span class="text-xs text-slate-500">(@Model.Rating.ToString("0"))/5</span>
                </div>

                <!-- Price -->
                <div class="mt-3 text-3xl font-bold tracking-tight text-slate-900">
                    @Model.Price.ToString("C", new System.Globalization.CultureInfo("tr-TR"))
                </div>

                <!-- Description -->
                <div class="mt-4 prose prose-slate max-w-none text-slate-700">
                    <p>@Model.Description</p>
                </div>

                <!-- Qty + Actions -->
                <div class="mt-6 flex flex-wrap items-center gap-3">
                    <!-- Qty input -->
                    <label class="sr-only" for="qty">Adet</label>
                    <div class="inline-flex h-11 items-center rounded-xl border border-slate-300 bg-white shadow-xs">
                        <button type="button" @@click="dec()" class="px-3 h-full text-slate-700 hover:text-slate-900" aria-controls="qty" aria-label="Azalt">−</button>
                        <input id="qty" type="number" min="1" x-model.number="qty" class="w-16 bg-transparent text-center text-slate-900 outline-none" @@change="sanitize()" aria-live="polite" aria-label="Adet">
                        <button type="button" @@click="inc()" class="px-3 h-full text-slate-700 hover:text-slate-900" aria-controls="qty" aria-label="Arttır">+</button>
                    </div>

                    <!-- CTA buttons -->
                    <button type="button"
                            hx-post='@Url.Action("Add","Cart")'
                            hx-vals='js:{ productId: @Model.Id, quantity: qty }'
                            hx-swap="none"
                            @@click="addToCart(false)"
                            class="h-11 px-5 cursor-pointer rounded-xl bg-amber-300 text-slate-900 font-semibold shadow-sm hover:bg-amber-400 focus:outline-none focus:ring-1 focus:ring-amber-100">
                        Sepete Ekle
                    </button>

                    <button type="button"
                            @@click="addToCart(true)"
                            class="h-11 px-5 rounded-xl cursor-pointer bg-orange-500 text-white font-semibold shadow-sm hover:bg-orange-600 focus:outline-none focus:ring-1 focus:ring-orange-200">
                        Hemen Satın Al
                    </button>
                </div>

                <!-- Small trust badges / info -->
                <ul class="mt-4 text-sm text-slate-600 space-y-1">
                    <li>• 3D Secure desteklenir</li>
                    <li>• Aynı gün kargo (12:00 öncesi)</li>
                </ul>
            </section>
        </div>
    </div>

    <!-- Toast (inline) -->
    <div x-show="toast.show" x-cloak x-transition.opacity.duration.200ms class="fixed bottom-6 left-1/2 -translate-x-1/2 z-50">
        <div class="rounded-lg px-4 py-2 text-sm shadow-lg"
             :class="{ 'bg-slate-900 text-white': toast.type==='info', 'bg-emerald-600 text-white': toast.type==='success', 'bg-red-600 text-white': toast.type==='error' }">
            <span x-text="toast.text"></span>
        </div>
    </div>
</main>

<script>
    function productPage(){
      return {
        qty: 1,
        toast: { show:false, text:'', type:'success', t:null },
        inc(){ this.qty++; this.sanitize(); },
        dec(){ if(this.qty>1) this.qty--; this.sanitize(); },
        sanitize(){ this.qty = parseInt(this.qty || 1, 10); if(this.qty<1) this.qty = 1; },
        addToCart(buyNow){
          try{
            const item = {
              id: @Model.Id,
              name: '@Model.Name'.trim(),
              variant: 'Standart',
              price: @Model.Price.ToString(System.Globalization.CultureInfo.InvariantCulture),
              qty: this.qty,
              image: '/img/@Model.ImageUrl'
            };
            const raw = localStorage.getItem('cart');
            const cart = raw ? JSON.parse(raw) : [];
            const idx = cart.findIndex(i => i.id === item.id && i.variant === item.variant);
            if(idx>-1) cart[idx].qty += item.qty; else cart.push(item);
            localStorage.setItem('cart', JSON.stringify(cart));

            if(buyNow){ window.location.href = '/Cart'; return; }
            this.notify('Sepete eklendi');
          }catch(e){ console.error(e); this.notify('Hata oluştu','error'); }
        },
        notify(text,type='success',timeout=2000){
          clearTimeout(this.toast.t); this.toast={ show:true, text, type, t:null };
          this.toast.t = setTimeout(()=> this.toast.show=false, timeout);
        }
      }
    }
</script>
