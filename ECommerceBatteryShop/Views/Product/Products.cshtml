@model ECommerceBatteryShop.Models.ProductListViewModel
@using System.Globalization

<!-- Include once globally (Layout). Safe if duplicated) -->
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<h1 class="text-2xl font-bold mb-4">Products</h1>

<form method="get" class="mb-6 grid grid-cols-2 md:grid-cols-4 gap-3">
    <input type="number" step="0.01" name="minPrice" value="@Model.MinPrice" placeholder="Min Price" class="border border-gray-200 focus:border-gray-400 focus:ring-0 p-2 rounded-lg" />
    <input type="number" step="0.01" name="maxPrice" value="@Model.MaxPrice" placeholder="Max Price" class="border border-gray-200 focus:border-gray-400 focus:ring-0 p-2 rounded-lg" />
    <input type="number" step="0.1" name="minRating" value="@Model.MinRating" placeholder="Min Rating" class="border border-gray-200 focus:border-gray-400 focus:ring-0 p-2 rounded-lg" />
    <button type="submit" class="px-4 py-2 rounded-xl bg-amber-300 text-gray-900 font-semibold shadow hover:bg-amber-400 transition">Filter</button>
</form>

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
@foreach (var product in Model.Products)
{
    var price = product.Price.ToString("C", CultureInfo.CurrentCulture);
    var fullStars = (int)Math.Floor(product.Rating);
    var hasHalf = product.Rating - fullStars >= 0.5;
    <div class="group relative rounded-2xl bg-white shadow-md ring-1 ring-gray-100 hover:shadow-xl transition overflow-hidden">
        <div class="p-4">
            <div class="bg-gray-50 rounded-xl h-40 flex items-center justify-center overflow-hidden">
                <img src="~/img/battery.jpg" alt="@product.Name" class="h-full w-full object-contain transition duration-300 group-hover:scale-[1.03]" />
            </div>

            <div class="mt-4 space-y-2">
                <h3 class="font-semibold leading-snug line-clamp-2">@product.Name</h3>

                <!-- Price -->
                <div class="flex items-baseline gap-2">
                    <span class="text-lg font-bold">@price</span>
                    @* Optional old price/discount badge here *@
                </div>

                <!-- Rating -->
                <div class="flex items-center gap-1 text-yellow-500">
                    @for (int i = 0; i < fullStars && i < 5; i++)
                    {
                        @:<svg class="w-4 h-4 fill-current" viewBox="0 0 20 20" aria-hidden="true"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.967 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.176 0l-2.8 2.034c-.784.57-1.839-.197-1.54-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.88 8.72c-.783-.57-.379-1.81.588-1.81H6.93a1 1 0 00.95-.69l1.17-3.292z"/></svg>
                    }
                    @if (hasHalf && fullStars < 5)
                    {
                        @:
                        <svg class="w-4 h-4" viewBox="0 0 20 20" aria-hidden="true">
                            <defs><clipPath id="half"><rect x="0" y="0" width="10" height="20"/></clipPath></defs>
                            <path class="fill-current text-yellow-500" d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.967 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.176 0l-2.8 2.034c-.784.57-1.839-.197-1.54-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.88 8.72c-.783-.57-.379-1.81.588-1.81H6.93a1 1 0 00.95-.69l1.17-3.292z" clip-path="url(#half)"/>
                            <path class="fill-gray-200" d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.967 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.176 0l-2.8 2.034c-.784.57-1.839-.197-1.54-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.88 8.72c-.783-.57-.379-1.81.588-1.81H6.93a1 1 0 00.95-.69l1.17-3.292z"/>
                        </svg>
                    }
                    @{
                        var printed = Math.Min(5, fullStars + (hasHalf ? 1 : 0));
                        for (int i = printed; i < 5; i++)
                        {
                            @:<svg class="w-4 h-4 text-gray-300 fill-current" viewBox="0 0 20 20" aria-hidden="true"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.967 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.176 0l-2.8 2.034c-.784.57-1.839-.197-1.54-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.88 8.72c-.783-.57-.379-1.81.588-1.81H6.93a1 1 0 00.95-.69l1.17-3.292z"/></svg>
                        }
                    }
                    <span class="ml-1 text-sm text-gray-500">(@product.Rating.ToString("0.0"))</span>
                </div>

                <!-- CTA -->
                <div 
                    x-data="{ added: false }" 
                    class="pt-2"
                    x-id="['status']"
                >
                        <button @@click ="
                                if (added) return;
                                added=true;
                                setTimeout(()=>
                            added = false, 1600);
                            "
                            :class="added
                            ? 'bg-green-500 text-white'
                            : 'bg-amber-300 text-gray-900 hover:bg-amber-400'"
                            class="w-full h-10 rounded-xl text-sm font-semibold shadow transition-colors duration-300 relative overflow-hidden focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-yellow-400"
                            >
                            <!-- Default label -->
                            <span x-show="!added"
                                  x-transition:enter="transition transform ease-out duration-250"
                                  x-transition:enter-start="-translate-y-3 opacity-0"
                                  x-transition:enter-end="translate-y-0 opacity-100"
                                  x-transition:leave="transition transform ease-in duration-200"
                                  x-transition:leave-start="translate-y-0 opacity-100"
                                  x-transition:leave-end="translate-y-3 opacity-0"
                                  class="block cursor-pointer">
                                Sepete ekle
                            </span>

                            <!-- Success label -->
                            <span x-show="added"
                                  x-transition:enter="transition transform ease-out duration-250"
                                  x-transition:enter-start="translate-y-3 opacity-0"
                                  x-transition:enter-end="translate-y-0 opacity-100"
                                  x-transition:leave="transition transform ease-in duration-200"
                                  x-transition:leave-start="translate-y-0 opacity-100"
                                  x-transition:leave-end="-translate-y-3 opacity-0"
                                  class="absolute inset-0 flex items-center justify-center gap-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                    <path d="M20 6L9 17l-5-5" />
                                </svg>
                                <span class="align-middle">Sepete eklendi</span>
                            </span>
                        </button>

                </div>
            </div>
        </div>

        <!-- subtle top border accent on hover -->
        <div class="absolute inset-x-0 top-0 h-0.5 bg-gradient-to-r from-amber-200 via-amber-400 to-amber-200 opacity-0 group-hover:opacity-100 transition"></div>
    </div>
}
</div>
