@using System.Globalization
@using Microsoft.AspNetCore.Html
@model ECommerceBatteryShop.Models.ProductDetailsViewModel
@{
    var productInStock = Model.product.StockQuantity > 0;
    var productStockText = productInStock ? "Stokta var" : "Stokta yok";
    var productStockClass = productInStock ? "text-emerald-600" : "text-rose-600";
}

<main class="bg-white min-h-screen pt-28 pb-24">
    <div class="mx-auto max-w-7xl px-4">

        <!-- Grid: image left, info right -->
        <div x-data="{ qty:1, added:false, inc(){ this.qty++; }, dec(){ if(this.qty>1) this.qty--; }, sanitize(){ this.qty=parseInt(this.qty||1,10); if(this.qty<1) this.qty=1; } }" class="grid grid-cols-1 lg:grid-cols-2 gap-10">

            <!-- Left: Image / gallery -->
            <section class="rounded-2xl border border-slate-200 bg-white p-4 sm:p-6 shadow-sm">
                <div class="relative rounded-xl bg-white transition-transform duration-200 overflow-hidden h-[420px] flex items-center justify-center hover:scale-[1.03]">
                    <img src="/img/@(string.IsNullOrWhiteSpace(Model.product.ImageUrl) ? "temsili.png" : Model.product.ImageUrl)"
                         alt="@(string.IsNullOrWhiteSpace(Model.product.Name) ? "Görsel yok" : Model.product.Name)"
                         class="max-h-full max-w-full object-contain transition-transform duration-200" />
                </div>
            </section>


            <!-- Right: Details -->
            <section class="rounded-2xl border border-slate-200 bg-white p-4 sm:p-6 shadow-sm">
                <h1 class="text-2xl font-semibold text-slate-900">@Model.product.Name</h1>
                @*
                <!-- Rating -->
                <div class="mt-2 flex items-center gap-2">
                    <div class="flex items-center gap-0.5 text-amber-500">
                        @for (var i = 0; i < 5; i++)
                        {
                            if (i < Model.Rating)
                            {
                                <svg class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor"><path d="M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z" /></svg>
                            }
                            else
                            {
                                <svg class="h-4 w-4 text-slate-300" viewBox="0 0 24 24" fill="currentColor"><path d="M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z" /></svg>
                            }
                        }
                    </div>
                    <span class="text-xs text-slate-500">(@Model.Rating.ToString("0"))/5</span>
                </div>
                *@
                <!-- Price -->
                <div class="mt-3 text-3xl font-bold tracking-tight text-slate-900">
                    @Model.product.Price.ToString("C", new System.Globalization.CultureInfo("tr-TR"))
                </div>

                <p class="mt-2 text-sm font-medium @productStockClass">@productStockText</p>
                <p class="mt-2 text-xs text-gray-500">IBAN ile ödemede %3 indirim.</p>

                <!-- Qty + Actions -->
                <div class="mt-6 flex flex-wrap items-center gap-3">
                    <!-- Qty input -->
                    <label class="sr-only" for="qty">Adet</label>
                    <div class="inline-flex h-11 items-center rounded-xl border border-slate-300 bg-white shadow-xs">
                        <button type="button"
                                @@click="dec()"
                                class="px-3 h-full text-slate-700 rounded-l-xl hover:bg-slate-200 hover:text-slate-900"
                                aria-controls="qty" aria-label="Azalt">
                            −
                        </button>

                        <input id="qty" type="number" min="1"
                               x-model.number="qty"
                               class="w-10 bg-transparent text-center text-slate-900 outline-none"
                               @@change="sanitize()"
                               aria-live="polite" aria-label="Adet">

                        <button type="button"
                                @@click="inc()"
                                class="px-3 h-full text-slate-700 rounded-r-xl hover:bg-slate-200 hover:text-slate-900"
                                aria-controls="qty" aria-label="Arttır">
                            +
                        </button>
                    </div>

                    <!-- CTA buttons -->
                    <div class="flex flex-col gap-1">
                        @if (productInStock)
                        {
                            <button hx-post="/Sepet/Add"
                                    :hx-vals="JSON.stringify({ productId: @Model.product.Id, quantity: qty })"
                                    hx-swap="none"
                                    x-data="{ added: false }"
                                    @@click="if (added) return; added = true; setTimeout(() => added = false, 1600);"
                                    :class="added
                                            ? 'bg-green-500 text-white'
                                            : 'bg-amber-300 text-gray-900 hover:bg-amber-400'"
                                    class="h-11 min-w-[8rem] rounded-md text-sm font-semibold shadow transition-colors duration-300 relative overflow-hidden rounded-md focus-visible:ring-yellow-400 cursor-pointer ">
                                <span x-show="!added"
                                      x-transition:enter="transition transform ease-out duration-250"
                                      x-transition:enter-start="-translate-y-3 opacity-0"
                                      x-transition:enter-end="translate-y-0 opacity-100"
                                      x-transition:leave="transition transform ease-in duration-200"
                                      x-transition:leave-start="translate-y-0 opacity-100"
                                      x-transition:leave-end="-translate-y-3 opacity-0"
                                      class="block">
                                    Sepete ekle
                                </span>

                                <span x-show="added"
                                      x-transition:enter="transition transform ease-out duration-250"
                                      x-transition:enter-start="translate-y-3 opacity-0"
                                      x-transition:enter-end="translate-y-0 opacity-100"
                                      x-transition:leave="transition transform ease-in duration-200"
                                      x-transition:leave-start="translate-y-0 opacity-100"
                                      x-transition:leave-end="-translate-y-3 opacity-0"
                                      class="absolute inset-0 flex items-center justify-center gap-1">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 align-middle" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                        <path d="M20 6L9 17l-5-5" />
                                    </svg>
                                    <span class="align-middle">Sepete eklendi</span>
                                </span>
                            </button>
                        }
                        else
                        {
                            <button type="button"
                                    disabled
                                    class="h-11 min-w-[8rem] rounded-md bg-gray-300 text-sm font-semibold text-gray-500 shadow cursor-not-allowed">
                                Stokta yok
                            </button>
                        }
                    </div>

                    <button type="button"
                            x-data="{ fav: @(Model.product.IsFavorite ? "true" : "false"), busy: false }"
                            @@click="if (busy) return; busy=true; fav=!fav; setTimeout(()=> busy=false, 300);"
                            hx-post="/Favori/Toggle"
                            :hx-vals="JSON.stringify({ productId: @Model.product.Id})"
                            hx-swap="none"
                            :aria-pressed="fav.toString()"
                            :class="fav ? 'text-rose-600 border-rose-300 bg-rose-50' : 'text-gray-700 border-gray-300 hover:bg-gray-100'"
                            class="relative h-11 w-11 grid place-items-center rounded-md border cursor-pointer transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-rose-400">
                        <span class="sr-only" x-text="fav ? 'Favorilerden çıkar' : 'Favorilere ekle'"></span>

                        <div class="relative h-5 w-5">
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 class="absolute inset-0 h-5 w-5 transition-all duration-200 ease-out"
                                 :class="fav ? 'opacity-0 scale-90' : 'opacity-100 scale-100'"
                                 viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                 stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z" />
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 class="absolute inset-0 h-5 w-5 transition-all duration-220 ease-out"
                                 :class="fav ? 'opacity-100 scale-100' : 'opacity-0 scale-110'"
                                 viewBox="0 0 24 24" fill="currentColor">
                                <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z" />
                            </svg>
                        </div>
                    </button>
                </div>
           <div class="mt-6">
                    <div class="flex items-start gap-2 p-2 bg-white mt-2">
                        <svg class="w-8 h-8 text-amber-300 flex-shrink-0 mt-3" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M12 1a9 9 0 00-9 9v5a3 3 0 003 3h1a1 1 0 001-1v-7a1 1 0 00-1-1H6a1 1 0 00-1 1v4m13-4a1 1 0 00-1-1h-1a1 1 0 00-1 1v7a1 1 0 001 1h1a3 3 0 003-3v-5a9 9 0 00-9-9z" />
                        </svg>
                        <div class="ml-4">
                            <h3 class="text-md font-semibold text-gray-900">İletişim Hattı</h3>
                            <p class="text-sm text-gray-600">Whatsapp veya telefon üzerinden ulaşabilirsiniz.</p>
                        </div>
                    </div>
                    <div class="flex items-start gap-2 p-2 bg-white mt-2">
                        <svg class="w-8 h-8 text-amber-300 flex-shrink-0 mt-3" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M3 7h13v8H3z" />
                            <path d="M16 7h5l1 2v6h-6V7z" />
                            <path d="M5 21a2 2 0 100-4 2 2 0 000 4zM17 21a2 2 0 100-4 2 2 0 000 4z" />
                        </svg>
                        <div class="ml-4">
                            <h3 class="text-md font-semibold text-gray-900">Hızlı Teslimat</h3>
                            <p class="text-sm text-gray-600">Siparişlerde çoklu teslimat seçeği.</p>
                        </div>
                    </div>
                    <div class="flex items-start gap-2 p-2 bg-white mt-5">
                        <svg class="h-8 w-8 text-amber-300 flex-shrink-0 mt-2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path fill="none" d="M0 0h24v24H0z"></path> <path d="M5.671 4.257c3.928-3.219 9.733-2.995 13.4.672 3.905 3.905 3.905 10.237 0 14.142-3.905 3.905-10.237 3.905-14.142 0A9.993 9.993 0 0 1 2.25 9.767l.077-.313 1.934.51a8 8 0 1 0 3.053-4.45l-.221.166 1.017 1.017-4.596 1.06 1.06-4.596 1.096 1.096zM13 6v2h2.5v2H10a.5.5 0 0 0-.09.992L10 11h4a2.5 2.5 0 1 1 0 5h-1v2h-2v-2H8.5v-2H14a.5.5 0 0 0 .09-.992L14 13h-4a2.5 2.5 0 1 1 0-5h1V6h2z"></path> </g> </g></svg>
                        <div class="ml-4">
                            <h3 class="text-md font-semibold text-gray-900">İade Politikası</h3>
                            <p class="text-sm text-gray-600">Müşteri memnuniyeti odaklı.</p>
                        </div>
                    </div>
           </div>
                

           
                    <img class="h-10 w-auto mt-6" src="~/img/paywithiyzico.png" alt="iyzico" />

           
                      



            </section>
        </div>
    </div>
    <!-- Alpine v3 -->
    <div x-data="{
        tab: 'desc',
        set(t){ this.tab=t; history.replaceState(null,'',`#${t}`) },
        init(){ const h=location.hash.replace('#',''); if(['desc','files'].includes(h)) this.tab=h; }
     }"
         class="mt-10 mx-auto max-w-7xl px-4">

        <!-- Tabs -->
        <div role="tablist" aria-label="Ürün sekmeleri" class="mb-4 flex gap-2">
            <button role="tab" @@click ="set('desc')" :aria-selected="tab==='desc'"
                    :class="tab==='desc' ? 'bg-white shadow-sm border-slate-300' : 'hover:bg-slate-50 border-slate-200'"
                    class="cursor-pointer rounded-xl border px-3 py-2 text-sm font-medium text-slate-700">
                Ürün Açıklaması
            </button>

            <button role="tab" @@click ="set('files')" :aria-selected="tab==='files'"
                    :class="tab==='files' ? 'bg-white shadow-sm border-slate-300' : 'hover:bg-slate-50 border-slate-200'"
                    class="cursor-pointer rounded-xl border px-3 py-2 text-sm font-medium text-slate-700">
                Dosya Eki
            </button>
        </div>

        <!-- Panels -->
        <div class="relative [&>*]:rounded-2xl [&>*]:border [&>*]:border-slate-200 [&>*]:bg-white/70 [&>*]:backdrop-blur-sm [&>*]:p-6 sm:[&>*]:p-8 [&>*]:shadow-sm">
            <!-- DESC -->
            <section x-show="tab==='desc'" x-cloak role="tabpanel" :aria-hidden="tab!=='desc'">
                <div class="absolute inset-0 pointer-events-none rounded-2xl ring-1 ring-inset ring-white/40"></div>
                <h2 class="text-xl font-semibold text-slate-900 mb-4">Ürün Açıklaması</h2>
                @if (!string.IsNullOrWhiteSpace(Model.product.Description))
                {
                @functions {
                    string Escape(string s) =>
                    s.Replace("&", "&amp;").Replace("<", "&lt;").Replace(">", "&gt;").Replace("\"", "&quot;").Replace("'", "&#39;");

                    IHtmlContent Bullets(string text)
                    {
                        var lines = (text ?? "").Replace("\r\n", "\n").Split('\n')
                        .Select(s => s.Trim()).Where(s => s.Length > 0).ToList();
                        if (lines.Count <= 1) return new HtmlString($"<p>{Escape(lines.FirstOrDefault() ?? "")}</p>");
                        var li = string.Join("", lines.Select(l => $"<li>{Escape(l)}</li>"));
                        return new HtmlString($"<ul>{li}</ul>");
                    }
                }
                    <div class="prose prose-slate max-w-none text-slate-700 leading-relaxed">
                    <p>@Bullets(Model.product.Description)</p>
                </div>
                }
                else
                {
                    <div class="rounded-xl border border-dashed border-slate-300 p-6 text-center text-slate-500">
                        Bu ürün için açıklama eklenmemiştir.
                    </div>
                }
            </section>

            <!-- FILES -->
            <section x-show="tab==='files'" x-cloak role="tabpanel" :aria-hidden="tab!=='files'">
                <div class="absolute inset-0 pointer-events-none rounded-2xl ring-1 ring-inset ring-white/40"></div>
                <h2 class="text-xl font-semibold text-slate-900 mb-4">Dosya Eki</h2>
                @if (Model.product.AttachmentUrl != null)
                {
                    <ul class="space-y-3">
                        <li class="flex items-center justify-between rounded-lg border border-slate-200 p-4">
                            <div><div class="text-slate-500 text-sm">PDF / Doküman</div></div>
                            <a href="/doc/@Model.product.AttachmentUrl" target="_blank" rel="noopener"
                               class="inline-flex items-center rounded-lg border border-slate-300 px-3 py-2 text-sm font-medium text-slate-700 hover:bg-slate-50">
                                PDF’i Aç
                            </a>
                        </li>
                    </ul>
                }
                else
                {
                    <div class="rounded-xl border border-dashed border-slate-300 p-6 text-center text-slate-500">
                        Bu ürün için dosya eki yok.
                    </div>
                }
            </section>
        </div>
    </div>
    
    <section class="space-y-6 my-12">
        <div class="flex items-center justify-between">
            <h2 class="text-2xl font-bold text-gray-900">İlginizi Çekebilecek Ürünler</h2>

            <a href="/Urun/Index"
               class="group inline-flex items-center gap-1.5 text-sm font-semibold text-gray-800 hover:text-amber-500">
                Tüm Ürünler
                <svg class="h-4 w-4 transition-transform group-hover:translate-x-0.5"
                     viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5 12h14M13 5l7 7-7 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </a>
        </div>

        <div x-data="{
             atStart: true, atEnd: false,
             onScroll(){ const el=$refs.scroller; this.atStart=el.scrollLeft<=5; this.atEnd = el.scrollLeft+el.clientWidth>=el.scrollWidth-5; },
               next(){ const el=$refs.scroller; el.scrollBy({left: el.clientWidth, behavior:'smooth'}); },
               prev(){ const el=$refs.scroller; el.scrollBy({left: -el.clientWidth, behavior:'smooth'}); }
             }"
             x-init="onScroll()"
             class="relative">

            <!-- Controls -->
            <button type="button" @@click="prev" :class="{'opacity-40 pointer-events-none': atStart}"
                                    class="absolute left-2 top-1/2 hover:bg-amber-400 hover:text-white cursor-pointer -translate-y-1/2 z-10 h-10 w-10 grid place-items-center border border-slate-300 rounded-full bg-white shadow-xl"
                    aria-label="Önceki">
                <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" transform="rotate(180)">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M8.29289 4.29289C8.68342 3.90237 9.31658 3.90237 9.70711 4.29289L16.7071 11.2929C17.0976 11.6834 17.0976 12.3166 16.7071 12.7071L9.70711 19.7071C9.31658 20.0976 8.68342 20.0976 8.29289 19.7071C7.90237 19.3166 7.90237 18.6834 8.29289 18.2929L14.5858 12L8.29289 5.70711C7.90237 5.31658 7.90237 4.68342 8.29289 4.29289Z" fill="currentColor"/>
                </svg>
            </button>

            <button type="button" @@click="next" :class="{'opacity-40 pointer-events-none': atEnd}"
                            class="absolute right-2 top-1/2 -translate-y-1/2 z-10 h-10 w-10 hover:text-white grid place-items-center text-xl rounded-full bg-white shadow-xl border border-slate-300 hover:bg-amber-400 cursor-pointer"
                    aria-label="Sonraki">
                <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M8.29289 4.29289C8.68342 3.90237 9.31658 3.90237 9.70711 4.29289L16.7071 11.2929C17.0976 11.6834 17.0976 12.3166 16.7071 12.7071L9.70711 19.7071C9.31658 20.0976 8.68342 20.0976 8.29289 19.7071C7.90237 19.3166 7.90237 18.6834 8.29289 18.2929L14.5858 12L8.29289 5.70711C7.90237 5.31658 7.90237 4.68342 8.29289 4.29289Z" fill="currentColor"/>
                </svg>
            </button>

            <!-- Track -->
            <div x-ref="scroller" style="--g:12px" @@scroll.passive="onScroll"
                 class="flex gap-[var(--g)] overflow-x-auto snap-x snap-mandatory scroll-smooth hide-scrollbar px-1 py-2">

                @foreach (var product in Model.RelatedProducts)
                {
                     
                        var inStock = product.StockQuantity > 0;
                        var stockText = inStock ? "Stokta var" : "Stokta yok";
                        var stockClass = inStock ? "text-emerald-600" : "text-rose-600"; 
                    
                            <div class="flex-none min-w-0 pl-2 lg:basis-[calc((100%-3*var(--g))/4)] md:basis-[calc((100%-2*var(--g))/3)] basis-[calc((100%-1*var(--g))/2)] snap-start">
                                <article class="group h-72 flex flex-col rounded-xl border border-slate-200 bg-white shadow-sm transition hover:shadow-md">
                                    <!-- Image -->
                                    <a href="@Url.Action("Detaylar","Urun", new { slug = product.Slug })" class="block p-3 pb-0">
                                              <div class="h-32 grid place-items-center overflow-hidden">
                <img src="/img/@(string.IsNullOrWhiteSpace(product.ImageUrl) ? "temsili.png" : product.ImageUrl)"
                     alt="@(string.IsNullOrWhiteSpace(product.Name) ? "Görsel yok" : product.Name)"
                     class="h-28 w-auto object-contain transition-transform duration-200 group-hover:scale-[1.03]" />
            </div>

                                    </a>

                                    <!-- Content -->
                                    <div class="px-3 pt-2 flex-1 flex flex-col">
                                       <a class="hover:underline" href="@Url.Action("Detaylar","Urun", new { slug = product.Slug })"><h3 class="text-sm font-semibold text-gray-900 line-clamp-2 min-h-[2.75rem]">@product.Name</h3></a>

                                        <!-- Rating + Price -->
                                        <div class="mt-1 flex items-center justify-between">
                                            @*
                                        <div class="flex items-center gap-0.5 text-yellow-400">
                                            @{
                                                    // Safer star count from float rating [0..5]
                                                    var r = product.Rating;
                                                    var full = r < 0 ? 0 : r > 5 ? 5 : (int)Math.Floor(r);
                                                    for (var i = 0; i < 5; i++)
                                                    {
                                                            var filled = i < full;
                                                        <text>
                                                            <svg class="h-4 w-4 @(filled ? "" : "text-gray-300")" viewBox="0 0 24 24" fill="currentColor">
                                                                <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z" />
                                                            </svg>
                                                        </text>
                                                    ;
                                                    }
                                            }
                                            
                                        </div>
                                        *@
                                            <div class="text-right">
                                                <div class="text-lg font-bold text-gray-900">
                                                    @product.Price.ToString("C", new CultureInfo("tr-TR"))
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Actions -->
                                        <div class="mt-3 mb-3 flex items-center gap-2">
                                            <div class="flex flex-1 flex-col gap-1">
                                                @if (inStock)
                                                {
                                                    <button
                                                        hx-post="/Sepet/Add"
                                                        hx-vals='{"productId": @product.Id, "quantity": 1}'
                                                        hx-swap="none"
                                                        x-data="{ added: false }"
                                                        @@click="if (added) return; added = true; setTimeout(() => added = false, 1600);"
                                                        :class="added ? 'bg-green-500 text-white' : 'bg-amber-300 text-gray-900 hover:bg-amber-400'"
                                                        class="h-9 w-full rounded-md text-sm font-semibold shadow transition-colors duration-300 relative overflow-hidden focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-yellow-400 cursor-pointer">
                                                        <span x-show="!added"
                                                              x-transition:enter="transition transform ease-out duration-250"
                                                              x-transition:enter-start="-translate-y-3 opacity-0"
                                                              x-transition:enter-end="translate-y-0 opacity-100"
                                                              x-transition:leave="transition transform ease-in duration-200"
                                                              x-transition:leave-start="translate-y-0 opacity-100"
                                                              x-transition:leave-end="-translate-y-3 opacity-0"
                                                              class="block">
                                                            Sepete ekle
                                                        </span>

                                                        <span x-show="added"
                                                              x-transition:enter="transition transform ease-out duration-250"
                                                              x-transition:enter-start="translate-y-3 opacity-0"
                                                              x-transition:enter-end="translate-y-0 opacity-100"
                                                              x-transition:leave="transition transform ease-in duration-200"
                                                              x-transition:leave-start="translate-y-0 opacity-100"
                                                              x-transition:leave-end="-translate-y-3 opacity-0"
                                                              class="absolute inset-0 flex items-center justify-center gap-1">
                                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 align-middle" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                                                <path d="M20 6L9 17l-5-5"/>
                                                            </svg>
                                                            <span class="align-middle text-white">Sepete eklendi</span>
                                                        </span>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button type="button"
                                                            disabled
                                                            class="h-9 w-full rounded-md bg-gray-300 text-sm font-semibold text-gray-500 shadow cursor-not-allowed">
                                                        Stokta yok
                                                    </button>
                                                }
                                            </div>

                                       <!-- Favorite (Heart) -->
            <button
              type="button"
              x-data="{ fav: @(product.IsFavorite ? "true" : "false"), busy: false }"
              @@click="
                if (busy) return;
                busy = true;
                fav = !fav;
                setTimeout(() => busy = false, 300);
              "
              hx-post="/Favori/Toggle"
              :hx-vals="JSON.stringify({ productId: @product.Id})"
               hx-swap="none"
              :aria-pressed="fav.toString()"
              :class="fav ? 'text-rose-600 border-rose-300 bg-rose-50' : 'text-gray-700 border-gray-300 hover:bg-gray-100'"
              class="relative h-9 w-9 grid place-items-center rounded-md border cursor-pointer
                     transition-colors duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-rose-400">
              <span class="sr-only" x-text="fav ? 'Favorilerden çıkar' : 'Favorilere ekle'"></span>

              <!-- Stack both icons; animate opacity/scale only (no x-show) -->
              <div class="relative h-5 w-5">
                <!-- Outline -->
                <svg xmlns="http://www.w3.org/2000/svg"
                     class="absolute inset-0 h-5 w-5 transition-all duration-200 ease-out"
                     :class="fav ? 'opacity-0 scale-90' : 'opacity-100 scale-100'"
                     viewBox="0 0 24 24" fill="none" stroke="currentColor"
                     stroke-width="1.8" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z"/>
                </svg>

                <!-- Filled -->
                <svg xmlns="http://www.w3.org/2000/svg"
                     class="absolute inset-0 h-5 w-5 transition-all duration-220 ease-out"
                     :class="fav ? 'opacity-100 scale-100' : 'opacity-0 scale-110'"
                     viewBox="0 0 24 24" fill="currentColor">
                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z"/>
                </svg>
              </div>
            </button>







                                        </div>
                                    </div>
       </article>
                            </div>
                }
            </div>
        </div>
    </section>


    </main>
<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('carousel', ({ visible = 4 } = {}) => ({
            i: 0, visible, maxIndex: 0,
            init() {
                this.$nextTick(() => {
                    const track = this.$refs.track;
                    const items = track.querySelectorAll('[data-item]');
                    const gap = parseFloat(getComputedStyle(track).gap || 16);
                    this.itemWidth = items[0]?.offsetWidth + gap || 0;
                    this.count = items.length;
                    this.maxIndex = Math.max(0, this.count - this.visible);
                });
            },
            move(dir) {
                this.i = Math.max(0, Math.min(this.i + dir, this.maxIndex));
                this.$refs.track.scrollTo({ left: this.i * this.itemWidth, behavior: 'smooth' });
            }
        }));
    });
</script>
<style>
    .hide-scrollbar::-webkit-scrollbar {
        display: none;
    }

    .hide-scrollbar {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }
</style>
